function TangentVertex(b,a,c,d){this.pos=b;this.uv=a;this.normal=c;this.tangent=d};function SkyBox(){this.camera=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1E5);this.target=new THREE.Vector3(0,0,0);this.scene=new THREE.Scene}
SkyBox.prototype.generateMesh=function(){var b=THREE.ImageUtils.loadTextureCube("skybox/px.jpg,skybox/nx.jpg,skybox/py.jpg,skybox/ny.jpg,skybox/pz.jpg,skybox/nz.jpg".split(","),new THREE.CubeRefractionMapping),a=THREE.ShaderUtils.lib.cube;a.uniforms.tCube.texture=b;b=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:a.uniforms,depthWrite:!1});mesh=new THREE.Mesh(new THREE.CubeGeometry(1E3,1E3,1E3),b);mesh.flipSided=!0;return mesh};function RiverData(){}
RiverData.prototype.load=function(){return[new THREE.Vector3(-141.18,0,-217.65),new THREE.Vector3(0,0,0),new THREE.Vector3(141.18,0,217.65),new THREE.Vector3(382.35,0,452.94),new THREE.Vector3(923.53,0,552.94),new THREE.Vector3(1135.3,0,588.24),new THREE.Vector3(1200,0,688.24),new THREE.Vector3(1300,0,811.76),new THREE.Vector3(1505.9,0,788.24),new THREE.Vector3(1705.9,0,758.82),new THREE.Vector3(1841.2,0,964.71),new THREE.Vector3(1976.5,0,1347.1),new THREE.Vector3(2017.6,0,1588.2),new THREE.Vector3(2123.5,
0,1741.2),new THREE.Vector3(2294.1,0,2229.4),new THREE.Vector3(2529.4,0,2288.2),new THREE.Vector3(2647.1,0,2394.1),new THREE.Vector3(2817.6,0,2458.8),new THREE.Vector3(2982.4,0,2623.5),new THREE.Vector3(2982.4,0,2794.1),new THREE.Vector3(3082.4,0,2970.6),new THREE.Vector3(3041.2,0,3241.2),new THREE.Vector3(2847.1,0,3452.9),new THREE.Vector3(2758.8,0,3594.1),new THREE.Vector3(2747.1,0,3747.1)]};function RiverVertex(b,a,c,d,e){this.pos=b;this.right=a||THREE.Vector3(1,0,0);this.up=c||THREE.Vector3(0,1,0);this.dir=d||THREE.Vector3(0,0,1);this.uv=e||THREE.Vector2(0,0);this.riverWidth=64}
RiverVertex.prototype={get leftTangentVertex(){return new TangentVertex((new THREE.Vector3).sub(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(2/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,0),this.up,this.right)},get rightTangentVertex(){return new TangentVertex((new THREE.Vector3).add(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(2/this.riverWidth)),new THREE.Vector2(this.uv.x,this.riverWidth*this.roadWidthScale),this.up,this.right)},get middleTangentVertex(){return new TangentVertex((new THREE.Vector3).copy(this.pos),
new THREE.Vector2(this.uv.x,this.riverWidth/2),this.up,this.right)},get middleLeftTangentVertex(){return new TangentVertex((new THREE.Vector3).sub(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(4/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,this.riverWidth/4),this.up,this.right)},get middleRightTangentVertex(){return new TangentVertex((new THREE.Vector3).add(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(4/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,
this.riverWidth/4),this.up,this.right)}};function RiverLine(b,a){this.numberOfIterationsPer100Meters=20;this.numberOfUpSmoothValues=10;this.riverTextureStrechFactor=0.125;this.riverWidthScale=13.25;this.points=[];void 0!==b&&this.load(b,a)}RiverLine.prototype.generateUTextureCoordinates=function(){for(var b=0,a=0;a<this.points.length;a++)this.points[a].uv=new THREE.Vector2(b,0),b+=this.riverTextureStrechFactor*(new THREE.Vector3).sub(this.points[(a+1)%this.points.length].pos,this.points[a%this.points.length].pos).length()};
RiverLine.prototype.load=function(b){if(3>b.length)throw"inputPoints is invalid, we need at least three valid input points to generate a RiverLine.";var a,c,d,e,g;for(a=1;a<b.length-2;a++){c=b[a-1];d=b[a];e=b[a+1];g=b[a+2];var f=d.distanceTo(e),f=Math.floor(this.numberOfIterationsPer100Meters*(f/100));0>=f&&(f=1);var h;for(iter=0;iter<f;iter++)h=new THREE.Spline([c,d,e,g]),h=new RiverVertex((new THREE.Vector3).copy(h.getPoint(1/3+iter/(3*f)))),this.points.push(h)}b=new THREE.Vector3(0,-1,0);c=[];
for(a=0;a<this.points.length;a++)d=(new THREE.Vector3).sub(this.points[(a+1)%this.points.length].pos,this.points[0>a-1?this.points.length-1:a-1].pos),d.normalize(),this.points[a].dir=d,c.push(b),e=c[a%this.points.length],e=(new THREE.Vector3).cross(d,e),e.normalize(),this.points[a].right=e,e=(new THREE.Vector3).cross(e,d),this.points[a].up=e;this.generateUTextureCoordinates()};function River(b){RiverLine.call(this,(new RiverData).load(b));this.riverVertices=[];this.riverIndices=[];this.generateVerticesAndObjects()}River.prototype=new RiverLine((new RiverData).load("Rivercam"));River.prototype.constructor=River;River.prototype.reload=function(){};
River.prototype.updateBoatRiverPosition=function(b,a,c){gotBoatInThisSegment=!1;thisPointDist=0;nextPointDist=1;maxNumberOfIterations=100;do if(thisPoint=this.points[a],nextPoint=this.points[a+1],thisPointDist=(new THREE.Vector3).sub(b,thisPoint.pos).dot(thisPoint.dir),nextPointDist=(new THREE.Vector3).sub(nextPoint.pos,b).dot(nextPoint.dir),0>thisPointDist?a--:0>nextPointDist?a++:gotBoatInThisSegment=!0,0>maxNumberOfIterations--)return;while(!1==gotBoatInThisSegment);segmentLength=thisPointDist+
nextPointDist;return{riverSegmentNumber:a,riverSegmentPercent:0==segmentLength?0:thisPointDist/nextPointDist}};
River.prototype.getRiverPositionMatrix=function(b,a){0>a&&(a=0);1<a&&(a=1);var c=a;p1=this.points[b-1];p2=this.points[b];p3=this.points[b+1];p4=this.points[b+2];var d=(new THREE.Spline([p1.pos,p2.pos,p3.pos,p4.pos])).getPoint(c),e=(new THREE.Spline([p1.dir,p2.dir,p3.dir,p4.dir])).getPoint(c),g=(new THREE.Spline([p1.right,p2.right,p3.right,p4.right])).getPoint(c),c=(new THREE.Spline([p1.up,p2.up,p3.up,p4.up])).getPoint(c);return{right:g,up:c,forward:e,translation:d}};
River.prototype.generateVerticesAndObjects=function(){for(var b=0;b<this.points.length;b++)this.riverVertices[5*b+0]=this.points[b].rightTangentVertex,this.riverVertices[5*b+1]=this.points[b].middleRightTangentVertex,this.riverVertices[5*b+2]=this.points[b].middleTangentVertex,this.riverVertices[5*b+3]=this.points[b].middleLeftTangentVertex,this.riverVertices[5*b+4]=this.points[b].leftTangentVertex;for(var a=[],c=0,b=0;b<this.points.length-1;b++){for(var d=0;4>d;d++)a[24*b+6*d+0]=c+d,a[24*b+6*d+1]=
c+5+1+d,a[24*b+6*d+2]=c+5+d,a[24*b+6*d+3]=c+5+1+d,a[24*b+6*d+4]=c+d,a[24*b+6*d+5]=c+1+d;c+=5}this.riverIndices=a};
River.prototype.generateMesh=function(){geometry=new THREE.Geometry;for(var b=0;b<this.riverVertices.length;b++)geometry.vertices.push(new THREE.Vertex(this.riverVertices[b].pos));geometry.faceVertexUvs[0]=[];for(var a=0;a<this.riverIndices.length;)face=new THREE.Face3,b=Array(3),b[0]=new THREE.UV(this.riverVertices[this.riverIndices[a]].uv.x,this.riverVertices[this.riverIndices[a]].uv.y),face.a=this.riverIndices[a++],b[1]=new THREE.UV(this.riverVertices[this.riverIndices[a]].uv.x,this.riverVertices[this.riverIndices[a]].uv.y),
face.b=this.riverIndices[a++],b[2]=new THREE.UV(this.riverVertices[this.riverIndices[a]].uv.x,this.riverVertices[this.riverIndices[a]].uv.y),face.c=this.riverIndices[a++],geometry.faces.push(face),geometry.faceVertexUvs[0].push(b);texture=THREE.ImageUtils.loadTexture("textures/water.jpg");texture.wrapS=0;texture.wrapT=0;material=new THREE.MeshBasicMaterial({map:texture,wireframe:!1,transparent:!0,opacity:0.9});mesh=new THREE.Mesh(geometry,material);mesh.position.set(0,2,0);return mesh};function Landscape(b){this.river=null;this.reloadLevel(b)}Landscape.prototype.reloadLevel=function(b){this.level=b;null==this.river?this.river=new River("River"+this.level):this.river.reload("River"+this.level)};Landscape.prototype.updateBoatRiverPosition=function(b,a,c){return this.river.updateBoatRiverPosition(b,a,c)};Landscape.prototype.getRiverPositionMatrix=function(b,a){return this.river.getRiverPositionMatrix(b,a)};
Landscape.prototype.generateMesh=function(){geometry=new THREE.Geometry;for(var b=[],a=[],c=0;c<this.river.riverVertices.length;c++)geometry.vertices.push(new THREE.Vertex(this.river.riverVertices[c].pos)),c%5||b.push(new THREE.Vector2(this.river.riverVertices[c].pos.x,this.river.riverVertices[c].pos.z)),(c+1)%5||a.push(new THREE.Vector2(this.river.riverVertices[c].pos.x,this.river.riverVertices[c].pos.z));b.push(new THREE.Vector2(3500,4E3));b.push(new THREE.Vector2(3500,-100));b.push(new THREE.Vector2(this.river.riverVertices[5].pos.x,
this.river.riverVertices[5].pos.z));a.push(new THREE.Vector2(-100,4E3));a.push(new THREE.Vector2(-100,0));a.push(new THREE.Vector2(this.river.riverVertices[5].pos.x,this.river.riverVertices[5].pos.z));b=new THREE.Shape(b);a=new THREE.Shape(a);b=new THREE.ExtrudeGeometry(b,{amount:10});a=new THREE.ExtrudeGeometry(a,{amount:10});b=THREE.SceneUtils.createMultiMaterialObject(b,[new THREE.MeshLambertMaterial({color:2271795})]);a=THREE.SceneUtils.createMultiMaterialObject(a,[new THREE.MeshLambertMaterial({color:2271795})]);
b.rotation.set(Math.PI/2,0,0);a.rotation.set(Math.PI/2,0,0);return[b,a]};
function lala(){this.gridHeight=this.gridWidth=256;this.mapZScale=this.mapHeightFactor=this.mapWidthFactor=10;this.vertices=[];this.indices=[];this.mapHeights=[];this.track=null;for(var b=[],a=0;a<this.gridWidth;a++)for(var c=0;c<this.gridWidth;c++)b[a+c*this.gridWidth]=Math.floor(256*Math.random());for(a=0;a<this.gridWidth;a++){this.mapHeights[a]=[];for(c=0;c<this.gridWidth;c++){var d=a+c*this.gridWidth;pos=this.calcLandscapePos(a,c,b);this.mapHeights[a][c]=pos.y;this.vertices[d]={};this.vertices[d].pos=
pos;edge1=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a,c+1,b));edge2=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a+1,c,b));edge3=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a-1,c+1,b));edge4=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a+1,c+1,b));edge5=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a-1,c-1,b));this.vertices[d].normal=(new THREE.Vector3).add((new THREE.Vector3).add((new THREE.Vector3).cross(edge2,edge1),(new THREE.Vector3).cross(edge4,edge3)),(new THREE.Vector3).cross(edge3,
edge5));this.vertices[d].normal.normalize().negate();this.vertices[d].tangent=(new THREE.Vector3).copy(edge1).normalize();this.vertices[d].uv=new THREE.Vector2(c/(this.gridHeight-1),a/(this.gridWidth-1))}}for(a=b=0;a<this.gridWidth-1;a++)for(c=0;c<this.gridWidth-1;c++)this.indices[b+0]=a*this.gridHeight+c,this.indices[b+2]=(a+1)*this.gridHeight+(c+1),this.indices[b+1]=(a+1)*this.gridHeight+c,this.indices[b+3]=(a+1)*this.gridHeight+(c+1),this.indices[b+5]=a*this.gridHeight+c,this.indices[b+4]=a*this.gridHeight+
(c+1),b+=6}Landscape.prototype.calcLandscapePos=function(b,a,c){return new THREE.Vector3(b*this.mapWidthFactor,c[(0>b?0:b>=this.gridWidth?this.gridWidth-1:b)+(0>a?0:a>=this.gridWidth?this.gridWidth-1:a)*this.gridWidth]/255*this.mapZScale,a*this.mapWidthFactor)};function Input(b){this.domElement=void 0!==b?b:document;this.mouseY=this.mouseX=0;this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();
if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(vent.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=
a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1}};this.domElement.addEventListener("keydown",
this.onKeyDown.bind(this),!1);this.domElement.addEventListener("keyup",this.onKeyUp.bind(this),!1)};var BaseGame=function(){return{fieldOfView:Math.PI/2,nearPlane:0.5,farPlane:2E3,width:window.innerWidth,height:window.innerWidth,lightDirection:new THREE.Vector3(0.2,1,1),elapsedTimeThisFrameInMs:10,totalTimeMs:0,lastFrameTotalTimeMs:0,startTimeThisSecond:0}}();function BasePlayer(){this.currentGameTimeInMilliseconds=0;this.zoomInTime=this.startGameZoomTimeMilliseconds=5E3;this.startGameZoomedInTime=3E3;this.firstFrame=!0}BasePlayer.prototype={get gameTimeMilliseconds(){return this.currentGameTimeMilliseconds-this.zoomInTime},get canControlCar(){return 0>=this.zoomInTime}};BasePlayer.prototype.update=function(b){this.firstFrame?this.firstFrame=!1:(0<this.zoomInTime&&(this.zoomInTime-=b),this.canControlBoat&&(this.currentGameTimeMilliseconds+=b))};function BoatPhysics(b){BasePlayer.call(this);this.input=b;this.boatMass=1E3;this.gravity=9.81;this.defaultMaxSpeed=200*this.mphToMeterPerSec;this.maxPossibleSpeed=200*this.mphToMeterPerSec;this.defaultMaxAccelerationPerSec=0.2;this.maxAcceleration=5.75;this.minAcceleration=-3.25;this.boatFrictionInWater=17;this.airFrictionPerSpeed=6.6;this.maxAirFriction=20*this.airFrictionPerSpeed;this.brakeSlowdown=1;this.meterPerSecToMph=1.609344*3.6;this.mphToMeterPerSec=1/this.meterPerSecToMph;this.maxRotationPerSec=
1.3;this.minSensitivity=0.1;this.boatHeight=2;this.minViewDistance=0.4;this.maxViewDistance=1.8;this.maxSpeed=1.05*this.defaultMaxSpeed;this.carMass=1.015*this.defaultCarMass;this.maxAccelerationPerSec=0.85*this.defaultMaxAccelerationPerSec;this.speed=0;this.boatUp=null;this.boatForce=new THREE.Vector3(0,0,0);this.viewDistance=null;this.rotateBoatAfterCollision=!1;this.isBoatOnWater=!0;this.riverSegmentNumber=1;this.lastAccelerationResult=this.riverSegmentPercent=0;this.boatPos=new THREE.Vector3(100,
5,140);this.boatAngle=0;this.boatUp=new THREE.Vector3(0,1,0);this.rotationChange=this.virtualRotationAmount=0}BoatPhysics.prototype=new BasePlayer;BoatPhysics.prototype.constructor=BoatPhysics;BoatPhysics.prototype={get lookAtPos(){return(new THREE.Vector3).add(this.boatPos,(new THREE.Vector3).copy(this.boatUp).multiplyScalar(this.boatHeight))},get boatDir(){return new THREE.Vector3(Math.cos(this.boatAngle),0,Math.sin(this.boatAngle))}};
BoatPhysics.prototype.reset=function(){this.speed=0;this.boatForce=new THREE.Vector3(0,0,0);this.riverSegmentPercent=this.riverSegmentNumber=0};
BoatPhysics.prototype.update=function(b){BasePlayer.prototype.update.call(this,b);if(0<this.zoomInTime)this.boatOnWater=!1;0.0010>b&&(b=0.0010);0.5<b&&(b=0.5);var a=this.minSensitivity;this.rotationChange*=0.95;this.rotationChange=this.input.moveLeft?this.rotationChange+a*this.maxRotationPerSec*b/2.5:this.input.moveRight?this.rotationChange-a*this.maxRotationPerSec*b/2.5:0;a=1.25*this.maxRotationPerSec*b;0!=this.rotateBoatAfterCollision?this.rotateBoatAfterCollision>a?(this.rotationChange+=a,this.rotateBoatAfterCollision-=
a):this.rotateBoatAfterCollision<-a?(this.rotationChange-=a,this.rotateBoatAfterCollision+=a):(this.rotationChange+=this.rotateBoatAfterCollision,this.rotateBoatAfterCollision=0):this.rotationChange=5>this.speed?this.rotationChange*(0.67+0.33*this.speed/10):this.rotationChange*(1+(this.speed-10)/100);if(this.rotationChange>a)this.rotationChange=a;if(this.rotationChange<-a)this.rotationChange=-a;this.boatAngle-=this.rotationChange;a=0;this.input.moveForward?a+=this.maxAccelerationPerSec*b:this.input.moveBackward&&
(a-=this.maxAccelerationPerSec*b);if(0<this.speed&&a>this.maxAcceleration)a=this.maxAcceleration;if(a<this.minAcceleration)a=this.minAcceleration;this.boatForce.set(0,0,0);this.isBoatOnWater&&this.boatForce.addSelf(this.boatDir.multiplyScalar(a*b));a=(new THREE.Vector3).copy(this.boatForce).divideScalar(this.boatMass);if(this.isBoatOnWater&&0<a.length()){var c=a.normalize().dot(this.boatDir);1<c&&(c=1);this.speed+=a.length()*c}a=this.airFrictionPerSpeed*Math.abs(this.speed);if(a>this.maxAirFriction)a=
this.maxAirFriction;this.boatForce.multiplyScalar(1-0.00116875*a);this.speed*=1-2.125E-5*a;if(this.speed>this.maxSpeed)this.speed=this.maxSpeed;if(this.speed<-this.maxSpeed)this.speed=-this.maxSpeed;a=game.landscape.updateBoatRiverPosition(this.boatPos,this.riverSegmentNumber,this.riverSegmentPercent);this.riverSegmentNumber=a.riverSegmentNumber;this.riverSegmentPercent=a.riverSegmentPercent;var a=game.landscape.getRiverPositionMatrix(this.riverSegmentNumber,this.riverSegmentPercent),c=a.translation,
d=new THREE.Vector3(a.right.x,a.right.y,a.right.z);d.multiplyScalar(26.5);this.setBanks((new THREE.Vector3).copy(c),(new THREE.Vector3).copy(c).addSelf(a.forward),(new THREE.Vector3).add(c,d),(new THREE.Vector3).add(c,d).addSelf(a.forward));this.checkForCollisions();this.boatPos.addSelf(this.boatDir.multiplyScalar(1.75*this.speed*b))};
BoatPhysics.prototype.checkForCollisions=function(){var b=distanceToLine(this.boatPos,this.bankRight,this.nextBankRight)-5,a=distanceToLine(this.boatPos,this.bankLeft,this.nextBankLeft)-5;if(1>b||1>a)this.speed*=-10};BoatPhysics.prototype.setBanks=function(b,a,c,d){this.bankLeft=b;this.nextBankLeft=a;this.bankRight=c;this.nextBankRight=d};
function distanceToLine(b,a,c){var d=(new THREE.Vector3).sub(c,a),b=(new THREE.Vector3).sub(a,b),a=(new THREE.Vector3).sub(c,a);return(new THREE.Vector3).cross(d,b).length()/a.length()};function ChaseCamera(b){BoatPhysics.call(this,b);this.setCameraPosition((new THREE.Vector3).add(new THREE.Vector3(0,0,0),new THREE.Vector3(0,10,10)))}ChaseCamera.prototype=new BoatPhysics;ChaseCamera.prototype.constructor=ChaseCamera;ChaseCamera.prototype.update=function(b){BoatPhysics.prototype.update.call(this,b);this.updateView()};ChaseCamera.prototype.setCameraPosition=function(b){this.cameraPos=b;this.cameraLookVector=(new THREE.Vector3).sub(this.lookAtPos,this.cameraPos)};
ChaseCamera.prototype.updateView=function(){this.cameraLookVector=this.boatDir;this.cameraLookVector.multiplyScalar(-1);this.cameraPos=(new THREE.Vector3).add(this.lookAtPos,this.cameraLookVector)};function Player(b){ChaseCamera.call(this,b)}Player.prototype=new ChaseCamera;Player.prototype.constructor=Player;Player.prototype.update=function(b){ChaseCamera.prototype.update.call(this,b)};function Client(){this.input=new Input;this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.5,8E3);this.stats=new Stats;this.renderer=new THREE.WebGLRenderer({antialias:!0});this.level="cam";this.player=new Player(this.input);this.landscape=new Landscape(this.level);hostname={localhost:"localhost",ec2:"ec2.walley.org.uk"};port=27960;this.socket=io.connect(hostname[0]+":"+port);this.socket.on("motd",function(b){console.log(b.motd)});this.socket.on("state",function(b){this.player.boatPos.set(b.x,
b.y,b.z)}.bind(this));this.socket.emit("join",{name:"marv"})}Client.prototype.run=function(){this.init();this.step()};Client.prototype.step=function(){this.update();this.draw();this.socket.emit("state",{x:this.player.boatPos.x,y:this.player.boatPos.y,z:this.player.boatPos.z});requestAnimationFrame(this.step.bind(this))};
Client.prototype.update=function(){this.player.update(this.clock.getDelta());this.camera.position=this.player.cameraPos;this.camera.lookAt(this.player.lookAtPos);this.skyBox.target.x=-Math.cos(this.player.boatAngle);this.skyBox.target.y=0;this.skyBox.target.z=-Math.sin(this.player.boatAngle);this.stats.update()};Client.prototype.draw=function(){this.render()};
Client.prototype.render=function(){this.skyBox.camera.lookAt(this.skyBox.target);this.renderer.render(this.skyBox.scene,this.skyBox.camera);this.renderer.render(this.scene,this.camera)};
Client.prototype.init=function(){this.renderer.setSize(window.innerWidth,window.innerHeight);this.renderer.autoClear=!1;container=document.getElementById("container");container.appendChild(this.renderer.domElement);scene=new THREE.Scene;scene.fog=new THREE.Fog(5817024,1,800);this.camera.position.set(72,8,105);scene.add(this.camera);var b=new THREE.AmbientLight(16777215);scene.add(b);b=new THREE.DirectionalLight(16777028);b.position=BaseGame.lightDirection.normalize();scene.add(b);scene.add(this.landscape.generateMesh()[0]);
scene.add(this.landscape.generateMesh()[1]);scene.add(this.landscape.river.generateMesh());scene.add(this.camera);b=new SkyBox;b.scene.add(b.generateMesh());this.scene=scene;this.skyBox=b;this.stats.domElement.style.position="absolute";this.stats.domElement.style.top="0px";container.appendChild(this.stats.domElement);this.clock=new THREE.Clock};var game=new Client;game.run();
