function TangentVertex(b,a,c,d){this.pos=b;this.uv=a;this.normal=c;this.tangent=d};function RiverVertex(b,a,c,d,e){this.pos=b;this.right=a||THREE.Vector3(1,0,0);this.up=c||THREE.Vector3(0,1,0);this.dir=d||THREE.Vector3(0,0,1);this.uv=e||THREE.Vector2(0,0);this.riverWidth=64}
RiverVertex.prototype={get leftTangentVertex(){return new TangentVertex((new THREE.Vector3).sub(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(2/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,0),this.up,this.right)},get rightTangentVertex(){return new TangentVertex((new THREE.Vector3).add(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(2/this.riverWidth)),new THREE.Vector2(this.uv.x,this.riverWidth*this.roadWidthScale),this.up,this.right)},get middleTangentVertex(){return new TangentVertex((new THREE.Vector3).copy(this.pos),
new THREE.Vector2(this.uv.x,this.riverWidth/2),this.up,this.right)},get middleLeftTangentVertex(){return new TangentVertex((new THREE.Vector3).sub(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(4/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,this.riverWidth/4),this.up,this.right)},get middleRightTangentVertex(){return new TangentVertex((new THREE.Vector3).add(this.pos,(new THREE.Vector3).copy(this.right).divideScalar(4/(this.riverWidth*this.roadWidthScale))),new THREE.Vector2(this.uv.x,
this.riverWidth/4),this.up,this.right)}};function RiverLine(b){this.numberOfIterationsPer100Meters=20;this.numberOfUpSmoothValues=10;this.riverTextureStrechFactor=0.125;this.riverWidthScale=13.25;this.points=[];this.riverVertices=[];this.riverIndices=[];this.load(b);this.generateVerticesAndObjects()}
RiverLine.prototype.generateUTextureCoordinates=function(){for(var b=0,a=0;a<this.points.length;a++)this.points[a].uv=new THREE.Vector2(b,0),b+=this.riverTextureStrechFactor*(new THREE.Vector3).sub(this.points[(a+1)%this.points.length].pos,this.points[a%this.points.length].pos).length()};
RiverLine.prototype.load=function(b){if(3>b.length)throw"inputPoints is invalid, we need at least three valid input points to generate a RiverLine.";var a,c,d,e,h;for(a=1;a<b.length-2;a++){c=b[a-1];d=b[a];e=b[a+1];h=b[a+2];var f=d.distanceTo(e),f=Math.floor(this.numberOfIterationsPer100Meters*(f/100));0>=f&&(f=1);var g;for(iter=0;iter<f;iter++)g=new THREE.Spline([c,d,e,h]),g=new RiverVertex((new THREE.Vector3).copy(g.getPoint(1/3+iter/(3*f)))),this.points.push(g)}b=new THREE.Vector3(0,-1,0);c=[];
for(a=0;a<this.points.length;a++)d=(new THREE.Vector3).sub(this.points[(a+1)%this.points.length].pos,this.points[0>a-1?this.points.length-1:a-1].pos),d.normalize(),this.points[a].dir=d,c.push(b),e=c[a%this.points.length],e=(new THREE.Vector3).cross(d,e),e.normalize(),this.points[a].right=e,e=(new THREE.Vector3).cross(e,d),this.points[a].up=e;this.generateUTextureCoordinates()};
RiverLine.prototype.generateVerticesAndObjects=function(){for(var b=0;b<this.points.length;b++)this.riverVertices[5*b+0]=this.points[b].rightTangentVertex,this.riverVertices[5*b+1]=this.points[b].middleRightTangentVertex,this.riverVertices[5*b+2]=this.points[b].middleTangentVertex,this.riverVertices[5*b+3]=this.points[b].middleLeftTangentVertex,this.riverVertices[5*b+4]=this.points[b].leftTangentVertex;for(var a=[],c=0,b=0;b<this.points.length-1;b++){for(var d=0;4>d;d++)a[24*b+6*d+0]=c+d,a[24*b+6*
d+1]=c+5+1+d,a[24*b+6*d+2]=c+5+d,a[24*b+6*d+3]=c+5+1+d,a[24*b+6*d+4]=c+d,a[24*b+6*d+5]=c+1+d;c+=5}this.riverIndices=a};function Landscape(){this.gridHeight=this.gridWidth=256;this.mapZScale=this.mapHeightFactor=this.mapWidthFactor=10;this.vertices=[];this.indices=[];this.mapHeights=[];this.track=null;for(var b=[],a=0;a<this.gridWidth;a++)for(var c=0;c<this.gridWidth;c++)b[a+c*this.gridWidth]=Math.floor(256*Math.random());for(a=0;a<this.gridWidth;a++){this.mapHeights[a]=[];for(c=0;c<this.gridWidth;c++){var d=a+c*this.gridWidth;pos=this.calcLandscapePos(a,c,b);this.mapHeights[a][c]=pos.y;this.vertices[d]={};this.vertices[d].pos=
pos;edge1=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a,c+1,b));edge2=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a+1,c,b));edge3=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a-1,c+1,b));edge4=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a+1,c+1,b));edge5=(new THREE.Vector3).sub(pos,this.calcLandscapePos(a-1,c-1,b));this.vertices[d].normal=(new THREE.Vector3).add((new THREE.Vector3).add((new THREE.Vector3).cross(edge2,edge1),(new THREE.Vector3).cross(edge4,edge3)),(new THREE.Vector3).cross(edge3,
edge5));this.vertices[d].normal.normalize().negate();this.vertices[d].tangent=(new THREE.Vector3).copy(edge1).normalize();this.vertices[d].uv=new THREE.Vector2(c/(this.gridHeight-1),a/(this.gridWidth-1))}}for(a=b=0;a<this.gridWidth-1;a++)for(c=0;c<this.gridWidth-1;c++)this.indices[b+0]=a*this.gridHeight+c,this.indices[b+2]=(a+1)*this.gridHeight+(c+1),this.indices[b+1]=(a+1)*this.gridHeight+c,this.indices[b+3]=(a+1)*this.gridHeight+(c+1),this.indices[b+5]=a*this.gridHeight+c,this.indices[b+4]=a*this.gridHeight+
(c+1),b+=6}Landscape.prototype.calcLandscapePos=function(b,a,c){return new THREE.Vector3(b*this.mapWidthFactor,c[(0>b?0:b>=this.gridWidth?this.gridWidth-1:b)+(0>a?0:a>=this.gridWidth?this.gridWidth-1:a)*this.gridWidth]/255*this.mapZScale,a*this.mapWidthFactor)};function Input(b){this.domElement=void 0!==b?b:document;this.mouseY=this.mouseX=0;this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();
if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(vent.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=
a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1}};this.domElement.addEventListener("keydown",
this.onKeyDown.bind(this),!1);this.domElement.addEventListener("keyup",this.onKeyUp.bind(this),!1)};var BaseGame=function(){return{fieldOfView:Math.PI/2,nearPlane:0.5,farPlane:2E3,width:window.innerWidth,height:window.innerWidth,lightDirection:new THREE.Vector3(0.2,1,1),elapsedTimeThisFrameInMs:0.0010,totalTimeMs:0,lastFrameTotalTimeMs:0,startTimeThisSecond:0}}();function BasePlayer(){this.currentGameTimeInMilliseconds=0;this.zoomInTime=this.startGameZoomTimeMilliseconds=5E3;this.startGameZoomedInTime=3E3;this.firstFrame=!0}BasePlayer.prototype={get gameTimeMilliseconds(){return this.currentGameTimeMilliseconds-this.zoomInTime},get canControlCar(){return 0>=this.zoomInTime}};
BasePlayer.prototype.update=function(){this.firstFrame?this.firstFrame=!1:(0<this.zoomInTime&&(this.zoomInTime-=BaseGame.elapsedTimeThisFrameInMs),this.canControlBoat&&(this.currentGameTimeMilliseconds+=BaseGame.elapsedTimeThisFrameInMs))};function BoatPhysics(){BasePlayer.call(this);this.defaultBoatMass=1E3;this.gravity=9.81;this.defaultMaxSpeed=20*this.mphToMeterPerSec;this.maxPossibleSpeed=25*this.mphToMeterPerSec;this.defaultMaxAcceleration=2.5;this.maxAcceleration=5.75;this.minAcceleration=-3.25;this.boatFrictionInWater=17;this.airFrictionPerSpeed=0.66;this.maxAirFriction=200*this.airFrictionPerSpeed;this.brakeSlowdown=1;this.meterPerSecToMph=1.609344*3.6;this.mphToMeterPerSec=1/this.meterPerSecToMph;this.maxRotationPerSec=1.3;
this.minSensitivity=0.5;this.boatHeight=2;this.minViewDistance=0.4;this.maxViewDistance=1.8;this.maxSpeed=1.05*this.defaultMaxSpeed;this.carMass=1.015*this.defaultCarMass;this.maxAcceleration=0.85*this.defaultMaxAcceleration;this.viewDistance=this.carForce=this.boatUp=this.speed=this.boatDir=this.boatPos=null;this.rotateBoatAfterCollision=0;this.isBoatOnWater=!1;this.lastAccelerationResult=this.riverSegmentPercent=this.riverSegmentNumber=0;this.boatPosition=new THREE.Vector3(0,0,1);this.boatDir=new THREE.Vector3(0,
0,1);this.boatUp=new THREE.Vector3(0,1,0);this.rotationChange=this.virtualRotationAmount=0}BoatPhysics.prototype=new BasePlayer;BoatPhysics.prototype.constructor=BoatPhysics;BoatPhysics.prototype.reset=function(){this.speed=0;this.boatForce=new THREE.Vector3(0,0,0);this.riverSegmentPercent=this.riverSegmentNumber=0};BoatPhysics.prototype.update=function(){BasePlayer.prototype.update.call(this);if(0<this.zoomInTime)this.boatOnWater=!1;this.rotationChange*=0.95};function ChaseCamera(){BoatPhysics.call(this);this.cameraPos=(new THREE.Vector3).add(new THREE.Vector3(0,0,0),new THREE.Vector3(0,10,10))}ChaseCamera.prototype=new BoatPhysics;ChaseCamera.prototype.constructor=ChaseCamera;ChaseCamera.prototype.update=function(){BoatPhysics.prototype.update.call(this)};function Player(){ChaseCamera.call(this)}Player.prototype=new ChaseCamera;Player.prototype.update=function(){ChaseCamera.prototype.update.call(this)};function CoxSimManager(){this.input=new Input;var b=new THREE.Vector3(0,0,0);this.player=new Player(b,this.input)}CoxSimManager.prototype.run=function(){this.init();this.step()};CoxSimManager.prototype.step=function(){this.update();this.draw();webkitRequestAnimationFrame(this.step.bind(this))};CoxSimManager.prototype.update=function(){this.player.update();this.controls.update(this.clock.getDelta());this.cubeTarget.x=-Math.cos(this.camera.rotation.y);this.cubeTarget.y=0;this.cubeTarget.z=-Math.sin(this.camera.rotation.y)};
CoxSimManager.prototype.draw=function(){this.render()};CoxSimManager.prototype.render=function(){this.cameraCube.lookAt(this.cubeTarget);this.renderer.render(this.sceneCube,this.cameraCube);this.renderer.render(this.scene,this.camera)};
CoxSimManager.prototype.init=function(){scene=new THREE.Scene;camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.5,8E3);camera.position.x=72;camera.position.y=8;camera.position.z=105;controls=new THREE.FirstPersonControls(camera);controls.movementSpeed=100;controls.lookSpeed=0.05;controls.lookVertical=!1;scene.add(camera);ambientLight=new THREE.AmbientLight(16777215);scene.add(ambientLight);directionalLight=new THREE.DirectionalLight(16777028);directionalLight.position=BaseGame.lightDirection.normalize();
scene.add(directionalLight);landscape=new Landscape;landscapeGeometry=new THREE.Geometry;for(var b=0;b<landscape.vertices.length;b++)landscapeGeometry.vertices.push(new THREE.Vertex(landscape.vertices[b].pos));landscapeGeometry.faceVertexUvs[0]=[];for(var a,b=0;b<landscape.indices.length;)face=new THREE.Face3,a=Array(3),a[0]=new THREE.UV(landscape.vertices[landscape.indices[b]].uv.x,landscape.vertices[landscape.indices[b]].uv.y),face.a=landscape.indices[b++],a[1]=new THREE.UV(landscape.vertices[landscape.indices[b]].uv.x,
landscape.vertices[landscape.indices[b]].uv.y),face.b=landscape.indices[b++],a[2]=new THREE.UV(landscape.vertices[landscape.indices[b]].uv.x,landscape.vertices[landscape.indices[b]].uv.y),face.c=landscape.indices[b++],landscapeGeometry.faces.push(face),landscapeGeometry.faceVertexUvs[0].push(a);landscapeGeometry.computeFaceNormals();landscapeGeometry.computeVertexNormals();landscapeMaterial=new THREE.MeshLambertMaterial({color:5635891,ambient:5592371,shading:THREE.FlatShading,wireframe:!1});a=new THREE.Mesh(landscapeGeometry,
landscapeMaterial);a.position.x=-500;a.position.y=-10;a.position.z=-500;a=[new THREE.Vector3(-141.18,0,-217.65),new THREE.Vector3(0,0,0),new THREE.Vector3(141.18,0,217.65),new THREE.Vector3(382.35,0,452.94),new THREE.Vector3(923.53,0,552.94),new THREE.Vector3(1135.3,0,588.24),new THREE.Vector3(1200,0,688.24),new THREE.Vector3(1300,0,811.76),new THREE.Vector3(1505.9,0,788.24),new THREE.Vector3(1705.9,0,758.82),new THREE.Vector3(1841.2,0,964.71),new THREE.Vector3(1976.5,0,1347.1),new THREE.Vector3(2017.6,
0,1588.2),new THREE.Vector3(2123.5,0,1741.2),new THREE.Vector3(2294.1,0,2229.4),new THREE.Vector3(2529.4,0,2288.2),new THREE.Vector3(2647.1,0,2394.1),new THREE.Vector3(2817.6,0,2458.8),new THREE.Vector3(2982.4,0,2623.5),new THREE.Vector3(2982.4,0,2794.1),new THREE.Vector3(3082.4,0,2970.6),new THREE.Vector3(3041.2,0,3241.2),new THREE.Vector3(2847.1,0,3452.9),new THREE.Vector3(2758.8,0,3594.1),new THREE.Vector3(2747.1,0,3747.1)];riverLine=new RiverLine(a);geometry0=new THREE.Geometry;var c=[];a=[];
for(b=0;b<riverLine.riverVertices.length;b++)geometry0.vertices.push(new THREE.Vertex(riverLine.riverVertices[b].pos)),b%5||c.push(new THREE.Vector2(riverLine.riverVertices[b].pos.x,riverLine.riverVertices[b].pos.z)),(b+1)%5||a.push(new THREE.Vector2(riverLine.riverVertices[b].pos.x,riverLine.riverVertices[b].pos.z));c.push(new THREE.Vector2(3500,4E3));c.push(new THREE.Vector2(3500,-100));c.push(new THREE.Vector2(riverLine.riverVertices[5].pos.x,riverLine.riverVertices[5].pos.z));a.push(new THREE.Vector2(-100,
4E3));a.push(new THREE.Vector2(-100,0));a.push(new THREE.Vector2(riverLine.riverVertices[5].pos.x,riverLine.riverVertices[5].pos.z));b=new THREE.Shape(c);a=new THREE.Shape(a);b=new THREE.ExtrudeGeometry(b,{amount:10});a=new THREE.ExtrudeGeometry(a,{amount:10});b=THREE.SceneUtils.createMultiMaterialObject(b,[new THREE.MeshLambertMaterial({color:2271795})]);a=THREE.SceneUtils.createMultiMaterialObject(a,[new THREE.MeshLambertMaterial({color:2271795})]);b.rotation.set(Math.PI/2,0,0);a.rotation.set(Math.PI/
2,0,0);scene.add(b);scene.add(a);geometry0.faceVertexUvs[0]=[];for(b=0;b<riverLine.riverIndices.length;)face=new THREE.Face3,a=Array(3),a[0]=new THREE.UV(riverLine.riverVertices[riverLine.riverIndices[b]].uv.x,riverLine.riverVertices[riverLine.riverIndices[b]].uv.y),face.a=riverLine.riverIndices[b++],a[1]=new THREE.UV(riverLine.riverVertices[riverLine.riverIndices[b]].uv.x,riverLine.riverVertices[riverLine.riverIndices[b]].uv.y),face.b=riverLine.riverIndices[b++],a[2]=new THREE.UV(riverLine.riverVertices[riverLine.riverIndices[b]].uv.x,
riverLine.riverVertices[riverLine.riverIndices[b]].uv.y),face.c=riverLine.riverIndices[b++],geometry0.faces.push(face),geometry0.faceVertexUvs[0].push(a);texture=THREE.ImageUtils.loadTexture("textures/water.jpg");texture.wrapS=0;texture.wrapT=0;material0=new THREE.MeshBasicMaterial({map:texture,wireframe:!1,transparent:!0,opacity:0.9});a=new THREE.Mesh(geometry0,material0);a.position.set(0,5,0);scene.add(a);cameraCube=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1E5);cubeTarget=
new THREE.Vector3(0,0,0);sceneCube=new THREE.Scene;a=THREE.ImageUtils.loadTextureCube("skybox/px.jpg,skybox/nx.jpg,skybox/py.jpg,skybox/ny.jpg,skybox/pz.jpg,skybox/nz.jpg".split(","),new THREE.CubeRefractionMapping);b=THREE.ShaderUtils.lib.cube;b.uniforms.tCube.texture=a;a=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:b.uniforms,depthWrite:!1});mesh=new THREE.Mesh(new THREE.CubeGeometry(1E3,1E3,1E3),a);mesh.flipSided=!0;sceneCube.add(mesh);sceneCube.add(cameraCube);
renderer=new THREE.WebGLRenderer({antialias:!0});renderer.setSize(window.innerWidth,window.innerHeight);renderer.autoClear=!1;container=document.getElementById("container");container.appendChild(renderer.domElement);this.scene=scene;this.camera=camera;this.renderer=renderer;this.controls=controls;this.cameraCube=cameraCube;this.sceneCube=sceneCube;this.cubeTarget=cubeTarget;this.clock=new THREE.Clock};try{var game=new CoxSimManager}catch(e$$5){}game.run();
